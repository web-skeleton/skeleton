package job

import (
	"github.com/mylxsw/asteria/log"
	"github.com/mylxsw/container"
)

const ExampleJobName = "example"

type ExampleJob struct {
	app       container.Container
	executing chan interface{} // 标识当前Job是否在执行中
}

func NewExampleJob(app container.Container) *ExampleJob {
	return &ExampleJob{app: app, executing: make(chan interface{}, 1)}
}

func (a *ExampleJob) Handle() {
	select {
	case a.executing <- struct{}{}:
		defer func() { <-a.executing }()

		a.app.MustResolve(func() {
			log.Debugf("Hello, This is a example")
		})
	default:
		log.Warningf("the last job is not finished yet, skip for this time")
	}
}
